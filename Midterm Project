using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;


namespace Midterm_Project
{
    class Restaurant
    {
        static void Main(string[] args)
        {

            RestaurantGuestsAndPorterActions guestsArriving = new RestaurantGuestsAndPorterActions();

            guestsArriving.AddNewGuest("Tulley Family");
            guestsArriving.AddNewGuest("Lima Family");
            guestsArriving.AddNewGuest("Palatine Family");
            guestsArriving.AddNewGuest("Wiercozek Family");
            guestsArriving.AddNewGuest("Oki-koki Family");
            guestsArriving.AddNewGuest("Zenturi Family");


            guestsArriving.ShowMeGuestNames();

            guestsArriving.GuestHasBeenSeated();
            guestsArriving.GuestHasBeenSeated();
            guestsArriving.GuestHasBeenSeated();
            guestsArriving.GuestHasBeenSeated();

            guestsArriving.NumberOfDirtyDishes();
            guestsArriving.NumberOfCleanDishes();

            guestsArriving.PorterCleansDishes();
            guestsArriving.PorterCleansDishes();
            guestsArriving.PorterCleansDishes();

            guestsArriving.NumberOfDirtyDishes();
            guestsArriving.NumberOfCleanDishes();



        }
    }
}



public class RestaurantGuestsAndPorterActions
{
    private Queue<string> restaurantWaitingQueue = new Queue<string>();
    private Stack<int> cleanDishes = new Stack<int>();
    private Stack<int> dirtyDishes = new Stack<int>();



    public void AddNewGuest(String parameter)
    {
        restaurantWaitingQueue.Enqueue(parameter);
    }
    

    public void ShowMeGuestNames()
    {
        foreach (var item in restaurantWaitingQueue)
        {
            Console.WriteLine("The " + item + " is now waiting to be seated.");
        }
    }
    

    public void GuestHasBeenSeated()
    {
        string nameOfGuestSeated = restaurantWaitingQueue.Dequeue();


        Console.WriteLine("The " + nameOfGuestSeated + " has been seated.");

        dirtyDishes.Push(1);

    }


    public void PorterCleansDishes()
    {
        int dishPickedUp = dirtyDishes.Pop();
        cleanDishes.Push(dishPickedUp);
        Console.WriteLine("The dish is now clean");
    }


    public void NumberOfDirtyDishes()
    {
       Console.WriteLine("The number of dirty dishes in the stack is " + dirtyDishes.Count);
        
    }



    public void NumberOfCleanDishes()
    {
            Console.WriteLine("The number of clean dishes in the stack is " + cleanDishes.Count);
        
    }
}




